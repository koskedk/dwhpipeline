<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/22/2019 12:10:52 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="KENYAHMIS"
  DTS:CreatorName="KENYAHMIS\dgikandi"
  DTS:DTSID="{393A0A58-6A70-4849-8B7E-EB84CBE130DE}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="15.0.1300.371"
  DTS:LocaleID="1033"
  DTS:ObjectName="SSIS_StageHTSAndCBR"
  DTS:PackageType="5"
  DTS:VersionBuild="26"
  DTS:VersionGUID="{301AC95E-1371-47EB-BC41-D02142CABC1A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.All_Staging_2016_2]"
      DTS:CreationName="ADO.Net:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{E62CE75D-5795-4A76-813A-96969F5475C6}"
      DTS:ObjectName="LocalHost.All_Staging_2016_2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=All_Staging_2016_2;Integrated Security=True;Application Name=SSIS-SSIS_StageNewHTS-{E62CE75D-5795-4A76-813A-96969F5475C6}LocalHost.All_Staging_2016_2;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.All_Staging_2016_21]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6D23ECEF-EA6D-4A80-9805-C8F4A32A9633}"
      DTS:ObjectName="LocalHost.All_Staging_2016_21">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=All_Staging_2016_2;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.CBS_Staging]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{065084F8-19A5-457C-B9EB-3CC1B6016662}"
      DTS:ObjectName="LocalHost.CBS_Staging">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=CBS_Staging;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Populate CBR"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4177C142-8B71-4DF2-ACB5-D5C427E62A8C}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate CBR"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{065084F8-19A5-457C-B9EB-3CC1B6016662}"
          SQLTask:SqlStatementSource="&#xA;-- Remove duplicates from stg_Patients if any&#xA;DELETE A FROM &#xA;&#xA;[All_Staging_2016_2].[dbo].[stg_Patients] A &#xA;INNER JOIN &#xA;(&#xA;&#xA;SELECT Ident FROM &#xA;(&#xA;SELECT ROW_NUMBER() OVER(PARTITION BY PatientUID ORDER  BY Ident ASC ) AS Num, PatientUID, ident &#xA;FROM  [All_Staging_2016_2].[dbo].[stg_Patients]&#xA;) B &#xA;WHERE num &gt; 1&#xA;) X&#xA;ON A.Ident = X.Ident&#xA;&#xA;&#xA;&#xA;-- Remove duplicates from stg_ARTPatients if any&#xA;DELETE A FROM &#xA;&#xA;[All_Staging_2016_2].[dbo].[stg_ARTPatients] A &#xA;INNER JOIN &#xA;(&#xA;&#xA;SELECT Ident FROM &#xA;(&#xA;SELECT ROW_NUMBER() OVER(PARTITION BY PatientUID ORDER  BY Ident ASC ) AS Num, PatientUID, ident &#xA;FROM  [All_Staging_2016_2].[dbo].[stg_ARTPatients]&#xA;) B &#xA;WHERE num &gt; 1&#xA;) X&#xA;ON A.Ident = X.Ident&#xA;&#xA;&#xA;&#xA;-- Remove duplicates from stg_PatientStatus if any&#xA;DELETE A FROM &#xA;&#xA;[All_Staging_2016_2].[dbo].[stg_PatientStatus] A &#xA;INNER JOIN &#xA;(&#xA;&#xA;SELECT Ident FROM &#xA;(&#xA;SELECT ROW_NUMBER() OVER(PARTITION BY PatientUID ORDER  BY Ident ASC ) AS Num, PatientUID, ident &#xA;FROM  [All_Staging_2016_2].[dbo].[stg_PatientStatus]&#xA;) B &#xA;WHERE num &gt; 1&#xA;) X&#xA;ON A.Ident = X.Ident&#xA;&#xA;&#xA;&#xA;----prepare tables &#xA;delete from dbo.cbsPatientEncounters&#xA;&#xA;&#xA;--UPDATE B&#xA;--SET B.[PatientUID]= P.[PatientUID]&#xA;--FROM [All_Staging_2016_2].dbo.stg_Patients P&#xA;--INNER JOIN [All_Staging_2016_2].dbo.stg_PatientVisits B ON P.PKV = B.PKV&#xA;--GO &#xA;&#xA;&#xA;go&#xA;delete from [dbo].[cbsARTRegimenEvent]&#xA;go&#xA;delete from  [dbo].[cbsCD4CountEvent]&#xA;go&#xA;delete from [dbo].[cbsCD4PercentEvent]&#xA;go&#xA;delete from [dbo].[cbsViralLoadEvent]&#xA;go&#xA;delete  from  [dbo].[cbsReportingFacility]&#xA;go&#xA;delete from [dbo].[cbsPatientProfile]&#xA;go&#xA;--delete from [MPI].[dbo].[PatientMatchingTable]&#xA;--go &#xA;&#xA;-- Drop contraints&#xA;IF (OBJECT_ID('dbo.FK_cbs_Viral_load_EVents_cbs_patient_profile1', 'F') IS NOT NULL)&#xA;BEGIN&#xA;&#x9;ALTER TABLE [dbo].[cbsViralLoadEvent] DROP CONSTRAINT [FK_cbs_Viral_load_EVents_cbs_patient_profile1]&#xA;END&#xA;GO&#xA;&#xA;IF (OBJECT_ID('dbo.FK_cbs_Patient_CD4_Events_cbs_patient_profile1', 'F') IS NOT NULL)&#xA;BEGIN&#xA;&#x9;ALTER TABLE [dbo].[cbsCD4CountEvent] DROP CONSTRAINT [FK_cbs_Patient_CD4_Events_cbs_patient_profile1]&#xA;END&#xA;GO&#xA;&#xA;IF (OBJECT_ID('dbo.[FK_Patient_Profile__Patient_Regimen_Events]', 'F') IS NOT NULL)&#xA;BEGIN&#xA;&#x9;ALTER TABLE [dbo].[cbsARTRegimenEvent] DROP CONSTRAINT [FK_Patient_Profile__Patient_Regimen_Events]&#xA;END&#xA;GO&#xA;&#xA;&#xA;IF (OBJECT_ID('dbo.FK_cbsCD4PercentEvent_cbs_patient_profile1', 'F') IS NOT NULL)&#xA;BEGIN&#xA;&#x9;ALTER TABLE [dbo].[cbsCD4PercentEvent] DROP CONSTRAINT [FK_cbsCD4PercentEvent_cbs_patient_profile1]&#xA;END&#xA;GO&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;-- Insert into facilities &#xA;INSERT cbsReportingFacility(FacilityName, FacilityCounty, FacilitySubCounty, FacilityCode)&#xA;SELECT FacilityName,County, District,FacilityCode FROM Facilities where FacilityCode in (13471,16785,13507,13533,13581,13634,13651,13747,13787,13834,13840,13947,13987,14018,14063,16790,14080,16418,16791,16792,14175)&#xA;go &#xA;&#xA;PRINT 'Patient Profile...'&#xA;GO&#xA;&#xA;-- Insert into PatientProfile&#xA;INSERT INTO [dbo].[cbsPatientProfile]&#xA;           (&#xA;           [PatientUID]&#xA;           ,[Sex]&#xA;           ,[BirthDate]&#xA;           ,[ReportingFacilityCode]&#xA;           ,[MaritalStatus]&#xA;           ,[CCCNumber]&#xA;           ,[HEINumber]&#xA;           ,[MotherCCCNumber]&#xA;           ,[PopulationType]&#xA;           ,[HivDiagnosisDate]&#xA;           ,[HivDiagnosisType]&#xA;           ,[HivCareEntryDate]&#xA;           ,[EnrollmentWHO]&#xA;           ,[ModeOfTransmission]&#xA;           ,[ArtInitiationDate]&#xA;           ,[DeathDate]&#xA;           ,[ResidenceWard]&#xA;           ,[ResidenceVillage]&#xA;           ,[ResidenceCounty]&#xA;           ,[ResidenceSubCounty]&#xA;           ,[ARTHistory]&#xA;           ,[HivRecencyTestConducted]&#xA;           ,[HivRecent]&#xA;           ,[TbInfectedAtEnrollment]&#xA;           ,[PregnantAtEnrollment]&#xA;           ,[BreastFeedingAtEnrollment])&#xA;SELECT DISTINCT P.PatientUID, &#xA;p.Gender, &#xA;CAST(p.Dob as Date),&#xA;p.SiteCode,&#xA;MaritalStatus,p.PatientID AS CCCNumber, NULL AS HEINUmber,NULL AS MotherCCCNumber, &#xA;NULL AS PopulationType,DateConfirmedHIVPositive,&#xA;NULL AS HIVDiagnosisType, &#xA;RegistrationAtCCC as HIVCareEntryDate, &#xA;[eWHO] AS EnrollmentWHO,&#xA;NULL AS ModeOfTransmission, &#xA;ART.StartARTDate AS ARTInitiationDate, ---Case Statement Previous or This MMb &#xA;S.ExitDate AS DeatDate, &#xA;NULL as ResidenceWard, &#xA;p.Village, &#xA;NULL AS ResidenceCounty, &#xA;P.District AS SubCounty, &#xA;NULL as ARTHistory,&#xA;NULL AS HiVRecencyTestConducted, &#xA;NULL AS HivRecent, &#xA;NULL AS TBInfectedAtEnrollment, &#xA;CASE WHEN P.Gender='F' THEN &#xA;&#x9; CASE &#xA;&#x9;&#x9;WHEN Preg.[PregnantAtEnrol]=1 THEN '1'ELSE '0' &#xA;&#x9; END &#xA;&#x9; ELSE NULL &#xA;END  AS PregnantAtEnrollment, &#xA;NULL AS BreastFeedingAtEnrollment&#xA; FROM [All_Staging_2016_2].[dbo].[stg_Patients] P&#xA; INNER JOIN [All_Staging_2016_2].[dbo].[stg_ARTPatients] ART&#xA; ON ART.PatientId=P.PatientId AND ART.SiteCode=P.SiteCode AND ART.PatientPK = P.PatientPK&#xA; LEFT JOIN [All_Staging_2016_2].[dbo].PatientBaselines PB &#xA; ON  PB.PatientId=P.PatientId AND PB.SiteCode=P.SiteCode AND PB.PatientPK = P.PatientPK&#xA; LEFT JOIN [All_Staging_2016_2].[dbo].[stg_PatientStatus]  S&#xA;  ON  S.PatientId=P.PatientId AND S.SiteCode=P.SiteCode AND S.PatientPK = P.PatientPK AND S.ExitReason='DIED'&#xA;  LEFT JOIN [All_Staging_2016_2].[dbo].[vw_PatientPregnancyStatusAtInitiation] Preg &#xA;  ON  Preg.PatientId=P.PatientId AND Preg.SiteCode=P.SiteCode AND Preg.PatientPK = P.PatientPK  &#xA;  where p.Gender is not null and p.SiteCode in (13471,16785,13507,13533,13581,13634,13651,13747,13787,13834,13840,13947,13987,14018,14063,16790,14080,16418,16791,16792,14175)&#xA;  go &#xA;PRINT 'Removing Facilities...'&#xA;GO&#xA;&#xA;&#xA;--Remove Facilities Not In Patient Profile &#xA;DELETE cbsReportingFacility WHERE [FacilityCode] NOT IN (SELECT [ReportingFacilityCode] FROM [dbo].[cbsPatientProfile] GROUP BY [ReportingFacilityCode])&#xA;&#xA;GO &#xA;&#xA;PRINT 'De-duplicating...'&#xA;GO&#xA;&#xA;--- DE-DUPLICATE &#xA;DELETE M &#xA;FROM [cbsPatientProfile] M&#xA;INNER JOIN &#xA;(&#xA;SELECT &#xA;ROW_NUMBER () OVER (PARTITION BY Sex, BirthDate,CCCNumber,ReportingFacilityCode ORDER BY ReportingFacilityCode,CCCNumber, sex, BirthDate) AS RowId ,&#xA; Sex, BirthDate,CCCNumber,ReportingFacilityCode, PatientUID&#xA; FROM [cbsPatientProfile]) A &#xA; ON A.CCCNumber= M.CCCNumber AND A.BirthDate=M.BirthDate AND A.Sex=M.Sex &#xA; AND A.ReportingFacilityCode=M.ReportingFacilityCode anD A.PatientUID=M.PatientUID&#xA; WHERE  A.RowId &gt; 1&#xA;&#xA; Go &#xA;&#xA; PRINT 'Patient Mapping Table...'&#xA;GO&#xA;&#xA;&#xA;--select * from [dbo].[cbsPatientProfile]&#xA;--SELECT * FROM [MPI].[dbo].[PatientMatchingTable]&#xA;&#xA; ---PatientUID Matching Table &#xA;&#xA;INSERT  [MPI].[dbo].[PatientMatchingTable] (PatientUID, SiteCode, CCCNumber)&#xA;SELECT P.PatientUID, P.ReportingFacilityCode, P.CCCNumber FROM [dbo].[cbsPatientProfile] P&#xA;LEFT JOIN [MPI].[dbo].[PatientMatchingTable] M ON M.SiteCode = P.ReportingFacilityCode AND M.CCCNumber=P.CCCNumber WHERE M.PatientUID IS NULL&#xA;&#xA; GO &#xA;&#xA; -----------------------&#xA;PRINT 'CD4 Events'&#xA;go&#xA;INSERT  [dbo].[cbsCD4CountEvent] (PatientUID, PatientCD4CountDate, PatientCD4Count, ReportingFacilityCode)&#xA;select DISTINCT T.PatientUID,v.OrderedbyDate,CAST(v.TestResult AS Float),v.SiteCode from [All_Staging_2016_2].dbo.vw_GetCD4Counts v&#xA;INNER JOIN MPI.[dbo].[PatientMatchingTable] t ON V.patientUID = t.PatientUID --V.PatientID = t.CCCNumber AND v.SiteCode=T.SiteCode &#xA;INNER JOIN [dbo].[cbsReportingFacility] f ON f.FacilityCode=v.SiteCode&#xA;WHERE TestResult IS NOT NULL&#xA;Order by t.PatientUID, OrderedbyDate ASC&#xA;&#xA;&#xA;Print 'CD4PercentEvent'&#xA;go &#xA;INSERT  [dbo].[cbsCD4PercentEvent](PatientUID, PatientCD4PercentDate, [PatientCD4Percent], ReportingFacilityCode)&#xA;select DISTINCT T.PatientUID,v.OrderedbyDate,CAST(v.TestResult AS Float),v.SiteCode from [All_Staging_2016_2].dbo.vw_GetCD4Percent v&#xA;INNER JOIN MPI.[dbo].[PatientMatchingTable] t ON V.PatientID = t.CCCNumber AND v.SiteCode=T.SiteCode &#xA;INNER JOIN [dbo].[cbsReportingFacility] f ON f.FacilityCode=v.SiteCode&#xA;WHERE TestResult IS NOT NULL&#xA;Order by t.PatientUID, OrderedbyDate ASC&#xA;&#xA;&#xA;Print 'Viral Loads'&#xA;go&#xA;INSERT [dbo].[cbsViralLoadEvent] (PatientUID, VLDate, VLSampleResult, VLPatientResultSuppressed, ReportingFacilityCode)&#xA;SELECT DISTINCT  T.PatientUID,v.OrderedbyDate,TestResult,&#xA;CASE WHEN ISNUMERIC (TestResult)=1 THEN &#xA;&#x9; CASE WHEN CAST(TestResult AS FLOAT)&lt;=1000 THEN 'YES' ELSE 'NO' END &#xA;&#x9; ELSE 'YES'  END AS VLSuppressed, v.SiteCode  FROM [All_Staging_2016_2].dbo.[vw_GetViralLoads] V&#xA;&#xA;INNER JOIN MPI.[dbo].[PatientMatchingTable] t ON V.PatientID = t.CCCNumber AND v.SiteCode=T.SiteCode &#xA;INNER JOIN [dbo].[cbsReportingFacility] f ON f.FacilityCode=v.SiteCode&#xA;WHERE TestResult IS NOT NULL AND TestResult &lt;&gt; 'Rejected' and OrderedbyDate is not null&#xA;Order by t.PatientUID, OrderedbyDate ASC&#xA;&#xA;go&#xA;&#xA;--SELECT * FROM [All_Staging_2016_2].dbo.[vw_GetViralLoads] V&#xA;&#xA;---&#xA;Print 'Regimen Events'&#xA;go&#xA;INSERT [dbo].[cbsARTRegimenEvent](&#xA; [PatientUID],[ARTRegimenStartDate],[ARTRegimen],[ReportingFacilityCode],[ARTRegimenEndDate])&#xA;&#xA;SELECT PatientUID,Dispensedate,CASE WHEN LEN(ISNULL(Drug,''))&gt;50 THEN '' ELSE ISNULL(Drug,'') END AS Drug ,SiteCode,PrevDispenseDate &#xA;FROM (&#xA;&#x9;SELECT ROW_NUMBER() OVER( PARTITION BY PatientUID,Dispensedate,Drug ORDER BY PatientUID,Dispensedate ASC) as num&#xA;&#x9;,PatientUID,Dispensedate,Drug, A.SiteCode,PrevDispenseDate   FROM &#xA;&#x9;(SELECT  t.PatientUID,Dispensedate,Drug, A.SiteCode, /*Num&#xA;&#x9;,LAG(Drug) OVER (PARTITION BY PatientId, PatientPK, A.SiteCode, DRUG ORDER BY PatientId,num  ) AS  PrevDrug */&#xA;&#x9;LAG(Dispensedate) OVER (PARTITION BY PatientId, PatientPK, A.SiteCode, Drug ORDER BY PatientId, NUM  ) AS  PrevDispenseDate&#xA;&#x9;FROM &#xA;&#x9;(&#xA;&#x9;SELECT &#xA;&#x9;ROW_NUMBER() OVER (PARTITION BY PatientId, PatientPK, SiteCode, Drug ORDER BY PatientId, PatientPK, SiteCode, Dispensedate) AS NUM , &#xA;&#x9;PatientId, PatientPK, SiteCode, Drug,Dispensedate &#xA;&#x9; FROM [All_Staging_2016_2].dbo.Stg_PatientPharmacy WHERE TreatmentType IN ('ARV','ART','PMTCT','HIV Treatment') AND ProphylaxisType IS NULL&#xA;&#x9; ) A &#xA;&#xA;&#x9;INNER JOIN MPI.[dbo].[PatientMatchingTable] t ON A.PatientID = t.CCCNumber AND A.SiteCode=T.SiteCode &#xA;&#x9;&#x9;) as  A&#xA;) AS B WHERE Num=1 and len(drug)&lt;=50 and drug is not null and Dispensedate is not null&#xA;&#xA;&#xA;DELETE [cbsARTRegimenEvent] WHERE [ARTRegimen] = ''&#xA;--SELECT DISTINCT * FROM &#xA;--(SELECT TOP 100 PERCENT t.PatientUID,Dispensedate,Drug, A.SiteCode, /*Num&#xA;--,LAG(Drug) OVER (PARTITION BY PatientId, PatientPK, A.SiteCode, DRUG ORDER BY PatientId,num  ) AS  PrevDrug */&#xA;--LAG(Dispensedate) OVER (PARTITION BY PatientId, PatientPK, A.SiteCode, Drug ORDER BY PatientId, NUM  ) AS  PrevDispenseDate&#xA;--FROM &#xA;--(&#xA;--SELECT &#xA;--ROW_NUMBER() OVER (PARTITION BY PatientId, PatientPK, SiteCode, Drug ORDER BY PatientId, PatientPK, SiteCode, Dispensedate) AS NUM , &#xA;--PatientId, PatientPK, SiteCode, Drug,Dispensedate &#xA;-- FROM [All_Staging_2016_2].dbo.Stg_PatientPharmacy WHERE TreatmentType IN ('ARV', 'ART','PMTCT') &#xA;-- ) A &#xA;&#xA;--INNER JOIN MPI.[dbo].[PatientMatchingTable] t ON A.PatientID = t.CCCNumber AND A.SiteCode=T.SiteCode &#xA;--ORDER BY PatientID,DispenseDate ASC&#xA;&#xA;--) A&#xA;&#xA;--go&#xA;&#xA;&#xA;&#xA;--SELECT Num, PatientId, PatientPK, SiteCode, Drug,Dispensedate,&#xA;--LAG(Drug) OVER (PARTITION BY PatientId, PatientPK, SiteCode, DRUG ORDER BY PatientId,num  ) AS  PrevDrug &#xA;--,LAG(Dispensedate) OVER (PARTITION BY PatientId, PatientPK, SiteCode, Drug ORDER BY PatientId, NUM  ) AS  PrevDispenseDate&#xA;--FROM &#xA;--(&#xA;--SELECT &#xA;--ROW_NUMBER() OVER (PARTITION BY PatientId, PatientPK, SiteCode, Drug ORDER BY PatientId, PatientPK, SiteCode, Dispensedate) AS NUM , &#xA;--PatientId, PatientPK, SiteCode, Drug,Dispensedate, R.Target_Regimen &#xA;-- FROM [All_Staging_2016_2].dbo.Stg_PatientPharmacy P &#xA;-- LEFT JOIN [All_Staging_2016_2].[dbo].[lkp_RegimenLineMap] R ON R.Source_Regimen = P.Drug&#xA;-- WHERE TreatmentType IN ('ARV', 'ART','PMTCT') &#xA;-- ) A &#xA;-- --ORDER BY PatientId, PatientPK, SiteCode,  Dispensedate &#xA;&#xA;&#xA;--select * from [dbo].[lkp_RegimenLineMapping]&#xA;&#xA;INSERT  [dbo].[cbsPatientEncounters] (PatientUID, EncounterDate, EncounterType, ReportingFacilityCode)&#xA;SELECT DISTINCT T.PatientUID,V.VisitDate,ISNULL(v.VisitType,'Not Specified'), v.SiteCode FROM All_Staging_2016_2.dbo.stg_PatientVisits V&#xA;INNER JOIN MPI.[dbo].[PatientMatchingTable] t ON V.PatientID = t.CCCNumber AND v.SiteCode=T.SiteCode &#xA;INNER JOIN [dbo].[cbsReportingFacility] f ON f.FacilityCode=v.SiteCode&#xA;where V.VisitDate is not null and len(v.SiteCode)=5&#xA;&#xA;---** MG Mapping of Visit Types  **&#xA;&#xA;  UPDATE &#xA;  M SET M.FacilityEMR= P.Emr&#xA;  FROM [CBS_Staging].[dbo].[cbsReportingFacility] M&#xA;  INNER JOIN &#xA;  (select DISTINCT SiteCode, EMR FROM All_Staging_2016_2.dbo.stg_Patients) P&#xA;  ON P.SiteCode = M.FacilityCode&#xA;&#xA;  /* MAP REGIMENS&#xA;&#xA;   UPDATE P&#xA; SET  P.[ARTRegimen]= ISNULL(M.Target_Regimen,P.[ARTRegimen])&#xA; FROM [cbsARTRegimenEvent] P&#xA; LEFT JOIN All_Staging_2016_2.[dbo].[lkp_RegimenMap]  M&#xA; ON P.[ARTRegimen] = M.Source_Regimen&#xA;*/&#xA;&#xA; go&#xA;&#xA;&#xA;---CLEAR &#xA;DELETE [dbo].[cbsCD4CountEvent] WHERE PatientUID NOT IN (SELECT PatientUID FROM cbsPatientProfile)&#xA;GO &#xA;&#xA;DELETE [dbo].[cbsARTRegimenEvent] WHERE PatientUID NOT IN (SELECT PatientUID FROM cbsPatientProfile)&#xA;&#xA;GO &#xA;&#xA;&#xA;DELETE [dbo].[cbsCD4PercentEvent] WHERE PatientUID NOT IN (SELECT PatientUID FROM cbsPatientProfile)&#xA;&#xA;GO &#xA;&#xA;&#xA;DELETE [dbo].[cbsViralLoadEvent] WHERE PatientUID NOT IN (SELECT PatientUID FROM cbsPatientProfile)&#xA;&#xA;GO &#xA;&#xA;&#xA; ALTER TABLE [dbo].[cbsViralLoadEvent]  WITH CHECK ADD  CONSTRAINT [FK_cbs_Viral_load_EVents_cbs_patient_profile1] FOREIGN KEY([PatientUID])&#xA;REFERENCES [dbo].[cbsPatientProfile] ([PatientUID])&#xA;GO&#xA;&#xA;ALTER TABLE [dbo].[cbsViralLoadEvent] CHECK CONSTRAINT [FK_cbs_Viral_load_EVents_cbs_patient_profile1]&#xA;GO&#xA;&#xA;&#xA;&#xA;ALTER TABLE [dbo].[cbsCD4CountEvent]  WITH CHECK ADD  CONSTRAINT [FK_cbs_Patient_CD4_Events_cbs_patient_profile1] FOREIGN KEY([PatientUID])&#xA;REFERENCES [dbo].[cbsPatientProfile] ([PatientUID])&#xA;GO&#xA;&#xA;ALTER TABLE [dbo].[cbsCD4CountEvent] CHECK CONSTRAINT [FK_cbs_Patient_CD4_Events_cbs_patient_profile1]&#xA;GO&#xA;&#xA;&#xA;&#xA;ALTER TABLE [dbo].[cbsARTRegimenEvent]  WITH CHECK ADD  CONSTRAINT [FK_Patient_Profile__Patient_Regimen_Events] FOREIGN KEY([PatientUID])&#xA;REFERENCES [dbo].[cbsPatientProfile] ([PatientUID])&#xA;GO&#xA;&#xA;ALTER TABLE [dbo].[cbsARTRegimenEvent] CHECK CONSTRAINT [FK_Patient_Profile__Patient_Regimen_Events]&#xA;GO&#xA;&#xA;&#xA;ALTER TABLE [dbo].[cbsCD4PercentEvent]  WITH CHECK ADD  CONSTRAINT [FK_cbsCD4PercentEvent_cbs_patient_profile1] FOREIGN KEY([PatientUID])&#xA;REFERENCES [dbo].[cbsPatientProfile] ([PatientUID])&#xA;GO&#xA;&#xA;ALTER TABLE [dbo].[cbsCD4PercentEvent] CHECK CONSTRAINT [FK_cbsCD4PercentEvent_cbs_patient_profile1]&#xA;GO&#xA;&#xA;INSERT cbsRefreshTable ([DateOfRefresh])&#xA;Values (GETDATE())" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate HTS Tables"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{08C084EA-1AD9-4019-B4F3-9EEE60EB86BB}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate HTS Tables"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6D23ECEF-EA6D-4A80-9805-C8F4A32A9633}"
          SQLTask:SqlStatementSource="/****** Script for SelectTopNRows command from SSMS  ******/&#xA;DROP TABLE stg_hts_TestKits&#xA;GO &#xA;SELECT DISTINCT [FacilityName]&#xA;      ,a.[SiteCode]&#xA;      ,[PatientPk]&#xA;      ,[HtsNumber]&#xA;      ,a.[Emr]&#xA;      ,a.[Project]&#xA;      ,cast(a.[DateExtracted] as Date) as DateExtracted&#xA;      ,[EncounterId]&#xA;      ,[TestKitName1]&#xA;      ,[TestKitLotNumber1]&#xA;      ,[TestKitExpiry1]&#xA;      ,[TestResult1]&#xA;      ,[TestKitName2]&#xA;      ,[TestKitLotNumber2]&#xA;      ,[TestKitExpiry2]&#xA;      ,[TestResult2]&#xA;&#x9;  INTO stg_hts_TestKits&#xA;  FROM [HTSCentral].[dbo].[HtsTestKits] a&#xA;  inner join (select SiteCode,[Emr],[Project], max(dateextracted) as dateextracted&#xA;FROM [HTSCentral].[dbo].Clients &#xA;group by SiteCode,[Emr],[Project]) b on a.SiteCode=b.SiteCode and a.[Emr]=b.Emr and a.[Project]=b.Project&#xA;and CONVERT(date,a.DateExtracted)=CONVERT(date,b.dateextracted)&#xA;&#xA;&#xA;  /****** Script for SelectTopNRows command from SSMS  ******/&#xA;&#xA;DROP TABLE stg_hts_PartnerTracings&#xA;GO&#xA;SELECT DISTINCT [FacilityName]&#xA;      ,a.[SiteCode]&#xA;      ,[PatientPk]&#xA;      ,[HtsNumber]&#xA;      ,a.[Emr]&#xA;      ,a.[Project]&#xA;      ,cast(a.[DateExtracted] as Date) as DateExtracted&#xA;      ,[TraceType]&#xA;      ,[TraceDate]&#xA;      ,[TraceOutcome]&#xA;      ,[BookingDate]&#xA;    &#xA;&#x9;  INTO stg_hts_PartnerTracings&#xA;  FROM [HTSCentral].[dbo].[HtsPartnerTracings] a&#xA;  inner join (select SiteCode,[Emr],[Project], max(dateextracted) as dateextracted&#xA;FROM [HTSCentral].[dbo].Clients &#xA;group by SiteCode,[Emr],[Project]) b on a.SiteCode=b.SiteCode and a.[Emr]=b.Emr and a.[Project]=b.Project&#xA;and CONVERT(date,a.DateExtracted)=CONVERT(date,b.dateextracted)&#xA;&#xA;  GO&#xA;  /****** Script for SelectTopNRows command from SSMS  ******/&#xA;&#xA;DROP TABLE &#x9;  stg_hts_PartnerNotificationServices&#xA;GO&#xA;SELECT DISTINCT [FacilityName]&#xA;      ,a.[SiteCode]&#xA;      ,[PatientPk]&#xA;      ,[HtsNumber]&#xA;      ,a.[Emr]&#xA;      ,a.[Project]&#xA;      ,cast(a.[DateExtracted] as Date) as DateExtracted&#xA;      ,[PartnerPatientPk]&#xA;      ,[KnowledgeOfHivStatus]&#xA;      ,[PartnerPersonID]&#xA;      ,[CccNumber]&#xA;      ,[IpvScreeningOutcome]&#xA;      ,[ScreenedForIpv]&#xA;      ,[PnsConsent]&#xA;      ,[RelationsipToIndexClient]&#xA;      ,[LinkedToCare]&#xA;      ,[MaritalStatus]&#xA;      ,[PnsApproach]&#xA;      ,[FacilityLinkedTo]&#xA;      ,LEFT([Sex], 1) AS Gender&#xA;      ,[CurrentlyLivingWithIndexClient]&#xA;      &#xA;      ,[Age]&#xA;      ,[DateElicited]&#xA;      ,[Dob]&#xA;      ,[LinkDateLinkedToCare]&#xA;&#x9;  INTO &#xA;&#x9;  stg_hts_PartnerNotificationServices&#xA;  FROM [HTSCentral].[dbo].[HtsPartnerNotificationServices] a&#xA;  inner join (select SiteCode,[Emr],[Project], max(dateextracted) as dateextracted&#xA;FROM [HTSCentral].[dbo].Clients &#xA;group by SiteCode,[Emr],[Project]) b on a.SiteCode=b.SiteCode and a.[Emr]=b.Emr and a.[Project]=b.Project&#xA;and CONVERT(date,a.DateExtracted)=CONVERT(date,b.dateextracted)&#xA;&#xA;&#xA;GO &#xA;/****** Script for SelectTopNRows command from SSMS  ******/&#xA;&#xA;DROP TABLE stg_hts_ClientTracing&#xA;GO &#xA;&#xA;SELECT DISTINCT [FacilityName]&#xA;      ,a.[SiteCode]&#xA;      ,[PatientPk]&#xA;      ,[HtsNumber]&#xA;      ,a.[Emr]&#xA;      ,a.[Project]&#xA;      &#xA;      ,cast(a.[DateExtracted] as Date) as DateExtracted&#xA;      ,[TracingType]&#xA;      ,[TracingDate]&#xA;      ,[TracingOutcome]&#xA; &#xA;&#x9;  INTO stg_hts_ClientTracing&#xA;  FROM [HTSCentral].[dbo].[HtsClientTracing] a&#xA;  inner join (select SiteCode,[Emr],[Project], max(dateextracted) as dateextracted&#xA;FROM [HTSCentral].[dbo].Clients &#xA;group by SiteCode,[Emr],[Project]) b on a.SiteCode=b.SiteCode and a.[Emr]=b.Emr and a.[Project]=b.Project&#xA;and CONVERT(date,a.DateExtracted)=CONVERT(date,b.dateextracted)&#xA;&#xA;  GO &#xA;&#xA;  /****** Script for SelectTopNRows command from SSMS  ******/&#xA;&#xA;DROP TABLE stg_hts_ClientLinkages&#xA;GO &#xA;&#xA;SELECT &#xA;&#x9;  &#xA;      DISTINCT [FacilityName]&#xA;      ,a.[SiteCode]&#xA;      ,[PatientPk]&#xA;      ,[HtsNumber]&#xA;      ,a.[Emr]&#xA;      ,a.[Project]&#xA;      ,CAST(a.[DateExtracted] AS DATE) AS [DateExtracted]&#xA;      ,[EnrolledFacilityName]&#xA;      ,CAST (MAX([ReferralDate]) AS DATE) AS [ReferralDate]&#xA;      ,CAST([DateEnrolled] AS DATE) AS [DateEnrolled]&#xA; &#xA;      ,CAST(MAX([DatePrefferedToBeEnrolled]) AS DATE ) AS [DatePrefferedToBeEnrolled]&#xA;      ,CASE WHEN [FacilityReferredTo]='Other Facility' THEN NULL ELSE [FacilityReferredTo] END AS [FacilityReferredTo] &#xA;      ,[HandedOverTo]&#xA;      ,[HandedOverToCadre]&#xA;      ,[ReportedCCCNumber]&#xA;      ,CASE WHEN CAST([ReportedStartARTDate] AS DATE) = '0001-01-01' THEN NULL ELSE CAST([ReportedStartARTDate] AS DATE) END AS [ReportedStartARTDate]&#xA;&#x9;  INTO stg_hts_ClientLinkages&#xA;  FROM [HTSCentral].[dbo].[ClientLinkages] a&#xA;  inner join (select SiteCode,[Emr],[Project], max(dateextracted) as dateextracted&#xA;FROM [HTSCentral].[dbo].Clients &#xA;group by SiteCode,[Emr],[Project]) b on a.SiteCode=b.SiteCode and a.[Emr]=b.Emr and a.[Project]=b.Project&#xA;and CONVERT(date,a.DateExtracted)=CONVERT(date,b.dateextracted)&#xA;  WHERE a.DateExtracted &gt; '2019-09-08'&#xA;  GROUP BY [FacilityName]&#xA;      ,a.[SiteCode]&#xA;      ,[PatientPk]&#xA;      ,[HtsNumber]&#xA;      ,a.[Emr]&#xA;      ,a.[Project]&#xA;      ,CAST(a.[DateExtracted] AS DATE) &#xA;      ,[EnrolledFacilityName]&#xA;&#x9;  ,CAST([DateEnrolled] AS DATE)  &#xA;&#x9;  ,[FacilityReferredTo]&#xA;&#x9;   ,[HandedOverTo]&#xA;      ,[HandedOverToCadre]&#xA;      ,[ReportedCCCNumber]&#xA;      ,CAST([ReportedStartARTDate] AS DATE)&#xA;&#xA;  GO &#xA;&#xA;  /****** Script for SelectTopNRows command from SSMS  ******/&#xA;&#xA;DROP TABLE stg_hts_ClientTests&#xA;GO &#xA;&#xA;SELECT distinct [Id]&#xA;      ,[FacilityName]&#xA;      ,a.[SiteCode]&#xA;      ,[PatientPk]&#xA;      --,[HtsNumber]&#xA;      ,a.[Emr]&#xA;      ,a.[Project]&#xA;      --,[Processed]&#xA;      --,[QueueId]&#xA;      --,[Status]&#xA;      --,[StatusDate]&#xA;      ,cast(a.[DateExtracted] as Date) as DateExtracted&#xA;      ,[EncounterId]&#xA;      ,[TestDate]&#xA;      ,[EverTestedForHiv]&#xA;      ,[MonthsSinceLastTest]&#xA;      ,[ClientTestedAs]&#xA;      ,[EntryPoint]&#xA;      ,[TestStrategy]&#xA;      ,[TestResult1]&#xA;      ,[TestResult2]&#xA;      ,[FinalTestResult]&#xA;      ,[PatientGivenResult]&#xA;      ,[TbScreening]&#xA;      ,[ClientSelfTested]&#xA;      ,[CoupleDiscordant]&#xA;      ,[TestType]&#xA;      ,[Consent]&#xA;      --,[FacilityId]&#xA;&#x9;  INTO stg_hts_ClientTests&#xA;  FROM [HTSCentral].[dbo].[HtsClientTests] a&#xA;  inner join (select SiteCode,[Emr],[Project], max(dateextracted) as dateextracted&#xA;FROM [HTSCentral].[dbo].Clients &#xA;group by SiteCode,[Emr],[Project]) b on a.SiteCode=b.SiteCode and a.[Emr]=b.Emr and a.[Project]=b.Project&#xA;and CONVERT(date,a.DateExtracted)=CONVERT(date,b.dateextracted)&#xA;&#xA;  GO &#xA;&#xA;  DROP TABLE stg_hts_clients&#xA;GO &#xA;&#xA;SELECT distinct&#xA;       [HtsNumber]&#xA;      ,a.[Emr]&#xA;      ,a.[Project]&#xA;      ,[PatientPk]&#xA;      ,a.[SiteCode]&#xA;      ,[FacilityName]&#xA;      ,[Serial]&#xA;      ,cast(a.[DateExtracted] as Date) as DateExtracted&#xA;      --,[Processed]&#xA;      --,[QueueId]&#xA;      --,[Status]&#xA;      --,[StatusDate]&#xA;      ,cast([DateCreated] as Date) as DateCreated&#xA;      --,[FacilityId]&#xA;      --,[EncounterId]&#xA;      --,[VisitDate]&#xA;      ,CAST ([Dob] AS DATE) AS [Dob]&#xA;      ,LEFT([Gender],1) AS Gender&#xA;      ,[MaritalStatus]&#xA;      --,[KeyPop]&#xA;      --,[TestedBefore]&#xA;      --,[MonthsLastTested]&#xA;      --,[ClientTestedAs]&#xA;      --,[StrategyHTS]&#xA;      --,[TestKitName1]&#xA;      --,[TestKitLotNumber1]&#xA;      --,[TestKitExpiryDate1]&#xA;      --,[TestResultsHTS1]&#xA;      --,[TestKitName2]&#xA;      --,[TestKitLotNumber2]&#xA;      --,[TestKitExpiryDate2]&#xA;      --,[TestResultsHTS2]&#xA;      --,[FinalResultHTS]&#xA;      --,[FinalResultsGiven]&#xA;      --,[TBScreeningHTS]&#xA;      --,[ClientSelfTested]&#xA;      --,[CoupleDiscordant]&#xA;      --,[TestType]&#xA;      ,[KeyPopulationType]&#xA;      ,CASE &#xA;&#x9;&#x9;WHEN [KeyPopulationType] IS NULL OR [KeyPopulationType] IN ('NA','N/A') THEN 'General Population' &#xA;&#x9;&#x9;WHEN[KeyPopulationType] IS NOT NULL AND [KeyPopulationType] NOT IN ('NA','N/A') THEN 'Key Population' END [PopulationType]&#xA;      ,[PatientDisabled] AS [DisabilityType]&#xA;&#x9;  ,CASE WHEN [PatientDisabled] IS NOT NULL THEN 'Yes' ELSE 'No' END AS [PatientDisabled]&#xA;      --,[PatientConsented]&#xA;      ,[County]&#xA;      ,[SubCounty]&#xA;      ,[Ward]&#xA;&#x9;  INTO stg_hts_clients&#xA;  FROM [HTSCentral].[dbo].[Clients] a&#xA;  inner join (select SiteCode,[Emr],[Project], max(dateextracted) as dateextracted&#xA;FROM [HTSCentral].[dbo].Clients &#xA;group by SiteCode,[Emr],[Project]) b on a.SiteCode=b.SiteCode and a.[Emr]=b.Emr and a.[Project]=b.Project&#xA;and CONVERT(date,a.DateExtracted)=CONVERT(date,b.dateextracted)&#xA;where a.DateExtracted &gt; '2019-09-08'&#xA;&#xA;GO&#xA;alter table [All_Staging_2016_2].dbo.stg_hts_clients add MPIPKV varchar(250)&#xA;&#xA;GO&#xA;&#xA;UPDATE&#xA;    [All_Staging_2016_2].dbo.stg_hts_clients&#xA;SET&#xA;    [All_Staging_2016_2].dbo.stg_hts_clients.MPIPKV = ran.MPIPKV&#xA;FROM&#xA;   [All_Staging_2016_2].dbo.stg_hts_clients SI&#xA;INNER JOIN&#xA;    ( SELECT distinct a.sxdmPKValueDoB as MPIPKV, p.Gender, p.PatientPK, p.SiteCode, p.DOB &#xA;  FROM [All_Staging_2016_2].dbo.stg_hts_clients p &#xA;  left join [CBSCentral].[dbo].[MasterPatientIndices] a on a.PatientPk = p.PatientPK and a.SiteCode=p.SiteCode &#xA;  where a.sxdmPKValueDoB is not null) ran&#xA;ON &#xA;    SI.PatientPk = ran.PatientPK and si.SiteCode=ran.SiteCode " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate stg_HTS_PositivePatients_new"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{07FDCDC1-E0CE-433A-AC3A-8B3F9F033DAA}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate stg_HTS_PositivePatients_new"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6D23ECEF-EA6D-4A80-9805-C8F4A32A9633}"
          SQLTask:SqlStatementSource="&#xA;DROP TABLE IF EXISTS stg_HTS_PositivePatients_new&#xA;GO&#xA;&#xA;DROP TABLE IF EXISTS temp_new_ids&#xA;go&#xA;&#xA;select [PatientPK], [SiteCode], NEWID() as NewUID  into temp_new_ids from stg_hts_clients&#xA;go&#xA;SELECT  &#xA;DISTINCT &#xA;&#x9;   --c.[FacilityName]&#xA;&#x9;   f.FacilityName &#xA;      ,c.[SiteCode]&#xA;      ,c.[Dob]&#xA;      ,LEFT(c.[Gender],1) AS [Gender]&#xA;      ,c.[PatientPK]&#xA;      ,'NO' as [dead]&#xA;      ,NULL as [death_date]&#xA;      ,ct.[EncounterId] as visit_id&#xA;      ,ct.[EncounterId] as [encounter_id]&#xA;      ,cast(c.[DateCreated] as date) as [date_created]&#xA;      ,ct.[TestDate] as [TestDate]&#xA;      ,ct.[TestType]&#xA;      ,c.[populationtype] as [population_type]&#xA;      ,c.[KeyPopulationType] as [key_population_type]&#xA;      ,ct.[EverTestedForHiv] as [ever_tested_for_hiv]&#xA;      ,ct.[MonthsSinceLastTest] as [months_since_last_test]&#xA;      ,c.[PatientDisabled] as [patient_disabled]&#xA;      ,c.[DisabilityType] as [disability_type]&#xA;      ,ct.[Consent] as [patient_consented]&#xA;      ,ct.[ClientTestedAs] as [client_tested_as]&#xA;      ,ct.[TestStrategy] as [test_strategy]&#xA;      ,tk.TestKitName1 as  [test_1_kit_name]&#xA;      ,tk.TestKitExpiry1 as  [test_1_kit_expiry]&#xA;      ,ct.TestResult1 as  [test_1_result]&#xA;      ,tk.TestKitName2 as [test_2_kit_name]&#xA;      ,tk.TestKitExpiry2 as  [test_2_kit_expiry]&#xA;      ,ct.TestResult2 as  [test_2_result]&#xA;      ,ct.FinalTestResult [final_test_result]&#xA;      ,ct.PatientGivenResult as  [patient_given_result]&#xA;      ,ct.CoupleDiscordant as  [couple_discordant]&#xA;      ,ct.TbScreening as  [tb_screening]&#xA;      ,ct.ClientSelfTested as [patient_had_hiv_self_test]&#xA;      ,trace.TracingOutcome as [tracing_status]&#xA;      ,trace.TracingType  as [tracing_type]&#xA;      ,lnk.ReportedCCCNumber as ReportedCCCNumber&#xA;      ,lnk.EnrolledFacilityName as  [facility_linked_to]&#xA;      ,lnk.[PKV]&#xA;      ,CASE WHEN lnk.[PatientUID] IS NOT NULL THEN lnk.[PatientUID] ELSE cnew.NewUID END AS [ClientUPI]&#xA;      --,[Ident]&#xA;      ,c.DateExtracted&#xA;      ,lnk.[PatientUID]&#xA;      ,lnk.CCCNumber AS [LinkedCCC_Number]&#xA;&#x9;  INTO stg_HTS_PositivePatients_new&#xA;  FROM stg_hts_clients c &#xA;  inner join DimFacilities f on c.SiteCode =f.FacilityCode &#xA;  INNER JOIN stg_hts_ClientTests ct ON ct.PatientPk=c.PatientPk AND ct.SiteCode=c.SiteCode&#xA;  inner join temp_new_ids cnew ON cnew.PatientPk=c.PatientPk AND cnew.SiteCode=c.SiteCode&#xA;  LEFT JOIN vw_hts_ClientLinkages lnk on lnk.PatientPk=c.PatientPk AND ct.SiteCode = lnk.SiteCode&#xA;  left join (select * from (&#xA;  SELECT ROW_NUMBER() OVER(PARTITION BY sitecode, patientpk ORDER BY TracingDate desc) as Num, [SiteCode]&#xA;      ,[PatientPk]&#xA;      ,[TracingType]&#xA;      ,[TracingOutcome], TracingDate&#xA;  FROM [HTSCentral].[dbo].[HtsClientTracing]) a&#xA;  where a.num=1) trace on trace.PatientPk=c.PatientPk AND ct.SiteCode = trace.SiteCode&#xA;  --LEFT JOIN stg_hts_ClientLinkages lnk on lnk.PatientPk=c.PatientPk AND ct.SiteCode = lnk.SiteCode&#xA;  LEFT JOIN (select * from (SELECT ROW_NUMBER() OVER(PARTITION BY sitecode, patientpk, EncounterId ORDER BY [TestKitExpiry1] desc) as Num, [SiteCode], EncounterId&#xA;      ,[PatientPk]&#xA;&#x9;  ,[TestKitName1]&#xA;      ,[TestKitLotNumber1]&#xA;      ,[TestKitExpiry1]&#xA;      ,[TestResult1]&#xA;      ,[TestKitName2]&#xA;      ,[TestKitLotNumber2]&#xA;      ,[TestKitExpiry2]&#xA;      ,[TestResult2]&#xA;  FROM [HTSCentral].[dbo].HtsTestKits) a&#xA;  where a.num=1) tk on tk.EncounterId = ct.EncounterId and ct.SiteCode = tk.SiteCode and tk.PatientPk = ct.PatientPk&#xA;  --LEFT JOIN stg_Patients P on P.PatientPK = c.PatientPk and P.SiteCode = c.SiteCode&#xA;  WHERE FinalTestResult = 'Positive' &#xA;&#xA;go&#xA;drop table temp_new_ids&#xA;go&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{DF5480E2-E379-43C7-8F10-1BAA0C51E70B}"
      DTS:From="Package\Populate HTS Tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Populate stg_HTS_PositivePatients_new" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{E2E8D501-F1D8-4F43-AF8E-078E7207A9FA}"
      DTS:From="Package\Populate stg_HTS_PositivePatients_new"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Populate CBR" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="142,42"
          Id="Package\Populate CBR"
          TopLeft="144.126987945045,239.975161498474" />
        <NodeLayout
          Size="177,42"
          Id="Package\Populate HTS Tables"
          TopLeft="126.031749370447,65.2422377156014" />
        <NodeLayout
          Size="267,42"
          Id="Package\Populate stg_HTS_PositivePatients_new"
          TopLeft="88.5714309177702,152.447208919623" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="218.301590144109,107.242237715601">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.2049712040216"
              Start="0,0"
              End="0,37.7049712040216">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.7049712040216" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="218.599209431408,194.447208919623">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.527952578851"
              Start="0,0"
              End="0,38.027952578851">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.027952578851" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>